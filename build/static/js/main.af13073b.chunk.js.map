{"version":3,"sources":["components/section.js","redux/contacts/contacts-actions.js","components/contactList.js","components/contactForm.js","redux/filter/filter-actions.js","components/filter.js","App.js","reportWebVitals.js","redux/contacts/contacts-reducers.js","utils/contacts.js","redux/filter/filter-reducers.js","redux/store.js","index.js"],"names":["Section","title","children","addContact","createAction","name","number","id","payload","deleteContact","connect","state","contacts","filter","dispatch","contactsActions","item","toLowerCase","includes","map","onClick","shortid","generate","action","onSubmit","e","preventDefault","target","value","length","alert","htmlFor","type","setFilter","onChange","useEffect","localStorage","setItem","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","contactsReducer","createReducer","parsedLocalContacts","parse","getItem","initialContacts","contact","store","configureStore","reducer","filterReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.af13073b.chunk.js","sourcesContent":["export default function Section({ title, children }) {\n  return (\n    <section>\n      <h2>{title}</h2>\n      {children}\n    </section>\n  );\n}\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addContact = createAction(\n  'contactList/AddContact',\n  (name, number, id) => ({\n    payload: {\n      name: name,\n      number: number,\n      id: id,\n    },\n  }),\n);\nexport const deleteContact = createAction('contactList/DeleteContact');\n","import Section from './section';\nimport shortid from 'shortid';\nimport * as contactsActions from '../redux/contacts/contacts-actions';\nimport { connect } from 'react-redux';\n\nfunction ContactList({ contacts, filter, deleteContact }) {\n  const filterContacts = () => {\n    return contacts.filter(item => item.name.toLowerCase().includes(filter));\n  };\n\n  return (\n    <Section title=\"Contacts\">\n      {filterContacts().map(item => (\n        <div key={shortid.generate()}>\n          {item.name} {item.number}\n          <button onClick={() => deleteContact(item.id)}>delete</button>\n        </div>\n      ))}\n    </Section>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n    filter: state.filter,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    deleteContact: id => dispatch(contactsActions.deleteContact(id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import Section from './section';\nimport * as contactsActions from '../redux/contacts/contacts-actions';\nimport { connect } from 'react-redux';\nimport shortid from 'shortid';\n\nfunction ContactForm({ contacts, addContact }) {\n  const handleContact = e => {\n    e.preventDefault();\n    const { name, number } = e.target;\n\n    if (contacts.filter(item => item.name === name.value).length > 0) {\n      alert('user already exists');\n      return;\n    }\n\n    addContact(name.value, number.value, shortid.generate());\n  };\n\n  return (\n    <Section title=\"Phonebook\">\n      <form action=\"\" onSubmit={handleContact}>\n        <label htmlFor=\"name\">\n          Name <br />\n          <input type=\"text\" id=\"name\" />\n        </label>\n        <br />\n        <label htmlFor=\"number\">\n          Number <br />\n          <input type=\"text\" id=\"number\" />\n        </label>\n        <br />\n\n        <button type=\"submit\">Add contact</button>\n      </form>\n    </Section>\n  );\n}\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addContact: (number, name, id) =>\n      dispatch(contactsActions.addContact(number, name, id)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport default createAction('filter/setFilter');\n","import { connect } from 'react-redux';\nimport setFilter from '../redux/filter/filter-actions';\n\nfunction Filter({ setFilter }) {\n  const changeFilter = e => {\n    const { value } = e.target;\n    setFilter(value.toLowerCase());\n  };\n\n  return (\n    <label htmlFor=\"filter\">\n      <input type=\"text\" id=\"filter\" onChange={changeFilter} />\n    </label>\n  );\n}\nconst mapDispatchToProps = dispatch => {\n  return {\n    setFilter: value => dispatch(setFilter(value)),\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(Filter);\n","import './App.css';\nimport { useEffect } from 'react';\nimport ContactList from './components/contactList';\nimport ContactForm from './components/contactForm';\nimport Filter from './components/filter';\nimport { connect } from 'react-redux';\n\nfunction App({ contacts }) {\n  useEffect(() => {\n    localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  return (\n    <div>\n      <ContactForm />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n}\n\nconst mapStateToProps = state => {\n  return {\n    contacts: state.contacts,\n  };\n};\n\nexport default connect(mapStateToProps)(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { addContact, deleteContact } from './contacts-actions';\nimport { createReducer } from '@reduxjs/toolkit';\nimport initialContacts from '../../utils/contacts';\n\nconst contactsReducer = createReducer(initialContacts(), {\n  [addContact]: (state, { payload }) => [...state, payload],\n  [deleteContact]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\nexport default contactsReducer;\n","export default function initializeContacts() {\n  const parsedLocalContacts = JSON.parse(localStorage.getItem('contacts'));\n  const localContacts = parsedLocalContacts &&\n    [...parsedLocalContacts].length > 0 && [...parsedLocalContacts];\n  const mockupContacts = [\n    { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n    { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n    { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n    { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n  ];\n  return localContacts || mockupContacts;\n}\n","import { createReducer } from '@reduxjs/toolkit';\nimport setFilter from './filter-actions';\n\nexport default createReducer('', {\n  [setFilter.type]: (state, { payload }) => payload,\n});\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactsReducer from './contacts/contacts-reducers';\nimport filterReducer from './filter/filter-reducers';\n\nconst store = configureStore({\n  reducer: {\n    filter: filterReducer,\n    contacts: contactsReducer,\n  },\n  devTools: process.env.NODE_ENV === 'development',\n});\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\nreportWebVitals();\n"],"sourceRoot":""}